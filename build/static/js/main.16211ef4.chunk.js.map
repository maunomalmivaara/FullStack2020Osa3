{"version":3,"sources":["components/AddPerson.js","components/Person.js","components/Persons.js","components/Filter.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["AddPerson","props","newName","newNumber","addPerson","handleNameChange","handleNumberChange","onSubmit","value","onChange","type","Person","person","name","number","onClick","remove","Persons","personsToShow","map","key","id","Filter","newFilter","handleFilterChange","Notification","message","style","errorStyle","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","successStyle","infoStyle","styleToChoose","baseUrl","axios","get","then","response","data","newObject","post","idToDelete","delete","put","App","useState","persons","setPersons","setNewFilter","setNewName","setNewNumber","newMessage","setNewMessage","newMessageStyle","setNewMessageStyle","useEffect","personService","initialPersons","updatePerson","find","p","changedPerson","returnedPerson","makeMessage","catch","error","filter","newPersonIsInPhonebook","includes","ms","messageTimeOut","setTimeout","startsWith","event","target","preventDefault","length","window","confirm","personToUpdate","concat","nameOf","ReactDOM","render","document","getElementById"],"mappings":"iNAkCeA,EAhCG,SAACC,GAEf,IAAMC,EAAUD,EAAMC,QAChBC,EAAYF,EAAME,UAClBC,EAAYH,EAAMG,UAClBC,EAAmBJ,EAAMI,iBACzBC,EAAqBL,EAAMK,mBAEjC,OACI,6BACI,0BAAMC,SAAUH,GAChB,sCACU,2BACFI,MAAON,EACPO,SAAUJ,KAGlB,wCACY,2BACJG,MAAOL,EACPM,SAAUH,KAGlB,6BACI,6BACA,4BAAQI,KAAK,UAAb,WCXDC,EAdA,SAACV,GAEZ,IAAMW,EAASX,EAAMW,OAErB,OACI,4BACKA,EAAOC,KADZ,IACmBD,EAAOE,OACtB,4BAAQC,QAASd,EAAMe,QAAvB,YCUGC,EAhBC,SAAChB,GAEb,OACI,oCACA,4BACKA,EAAMiB,cAAcC,KAAI,SAAAP,GAAM,OAC3B,kBAAC,EAAD,CAAQQ,IAAKR,EAAOS,GACZT,OAAQA,EACRI,OAAQ,kBAAMf,EAAMe,OAAOJ,EAAOS,aCU3CC,EAnBA,SAACrB,GAEZ,IAAMsB,EAAYtB,EAAMsB,UAClBC,EAAqBvB,EAAMuB,mBAEjC,OACI,oCACA,8BACI,mDACmB,2BACfhB,MAAOe,EACPd,SAAUe,QCqBXC,EAhCM,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,MAEvBC,EAAa,CACfC,MAAO,MACPC,WAAY,YACZC,SAAU,OACVC,YAAa,QACbC,aAAc,MACdC,QAAS,OACTC,aAAc,QAGZC,EAAY,2BAAOR,GAAP,IAAmBC,MAAO,UAEtCQ,EAAS,2BAAOT,GAAP,IAAmBC,MAAO,SAEnCS,EAA0B,YAAVX,EAChBS,EACU,UAAVT,EACIC,EACAS,EAEV,OAAgB,OAAZX,EACO,KAGP,yBAAKC,MAAOW,GACPZ,I,gBC5BPa,EAAU,eAsBD,EApBA,WAEX,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAkB9B,EAfA,SAAAC,GAEX,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa9B,EAVA,SAACG,GAEZ,OADgBP,IAAMQ,OAAN,UAAgBT,EAAhB,YAA2BQ,IAC5BL,MAAK,kBAAMK,MAQf,EALA,SAAC1B,EAAIwB,GAEhB,OADgBL,IAAMS,IAAN,UAAaV,EAAb,YAAwBlB,GAAMwB,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCuK9BM,EApLH,WAAO,IAAD,EAEeC,mBAAS,IAFxB,mBAERC,EAFQ,KAECC,EAFD,OAGoBF,mBAAS,IAH7B,mBAGR5B,EAHQ,KAGG+B,EAHH,OAIgBH,mBAAS,IAJzB,mBAIRjD,EAJQ,KAICqD,EAJD,OAKoBJ,mBAAS,IAL7B,mBAKRhD,EALQ,KAKGqD,EALH,OAMsBL,mBAAS,MAN/B,mBAMRM,EANQ,KAMIC,EANJ,OAOgCP,mBAAS,WAPzC,mBAORQ,EAPQ,KAOSC,EAPT,KAiBhBC,qBAPa,WACXC,IAEGpB,MAAK,SAAAqB,GACJV,EAAWU,QAGD,IAGhB,IA8CMC,EAAe,SAAC3C,GACpB,IAAMT,EAASwC,EAAQa,MAAK,SAAAC,GAAC,OAAIA,EAAE7C,KAAOA,KACpC8C,EAAa,2BAAOvD,GAAP,IAAeE,OAAQX,IAE1C2D,EACYzC,EAAI8C,GACXzB,MAAK,SAAA0B,GACFf,EAAWD,EAAQjC,KAAI,SAAA+C,GAAC,OAAIA,EAAE7C,KAAOA,EAAK6C,EAAIE,MAC9CC,EACE,OADS,6BAEaD,EAAevD,MACrC,KAEF0C,EAAW,IACXC,EAAa,OAEhBc,OAAM,SAAAC,GACLF,EACE,QADS,gCAEgBzD,EAAOC,KAFvB,6CAGT,KAEFwC,EAAWD,EAAQoB,QAAO,SAAAN,GAAC,OAAIA,EAAE7C,KAAOA,MACxCkC,EAAW,IACXC,EAAa,QAqCfiB,EAAyB,WAC7B,OAAOrB,EACEjC,KAAI,SAAA+C,GAAC,OAAIA,EAAErD,QACX6D,SAASxE,IAIdmE,EAAc,SAAC1C,EAAOD,EAASiD,GACnCf,EAAmBjC,GACnB+B,EAAchC,GACdkD,EAAeD,IAIXC,EAAiB,SAACD,GACtB,OAAOE,YAAW,WAAOnB,EAAc,QAAQiB,IAM3CzD,EAAgBkC,EAAQoB,QAAO,SAAAN,GACjC,OAAOA,GAAKA,EAAErD,KAAKiE,WAAWvD,MAGlC,OACE,6BACE,yCACA,kBAAC,EAAD,CAAcG,QAAS+B,EAAY9B,MAAOgC,IAE1C,kBAAC,EAAD,CACEpC,UAAWA,EACXC,mBArCqB,SAACuD,GAC1BzB,EAAayB,EAAMC,OAAOxE,UAuCxB,wCACA,kBAAC,EAAD,CACEN,QAASA,EACTC,UAAWA,EACXC,UAlJY,SAAC2E,GAEjB,GADAA,EAAME,iBACiB,IAAnB/E,EAAQgF,QAAqC,IAArB/E,EAAU+E,OAQtC,GAAKT,KA0BH,GAAIU,OAAOC,QAAP,UAAkBlF,EAAlB,+FAAwH,CACxH,IAAMmF,EAAiBjC,EAAQa,MAAK,SAAAC,GAAC,OAAIA,EAAErD,OAASX,KACpD8D,EAAaqB,EAAehE,UAvBhCyC,EAJqB,CACnBjD,KAAMX,EACNY,OAAQX,IAIPuC,MAAK,SAAA0B,GACFf,EAAWD,EAAQkC,OAAOlB,IAC1BC,EACE,UADS,gBAEAD,EAAevD,MACxB,QAGLyD,OAAM,SAAAC,GACLF,EACE,QACAE,EAAM5B,SAASC,KAAK2B,MACpB,QAGJhB,EAAW,IACXC,EAAa,SA9Bfa,EACE,QACA,4BACA,MA6IAhE,iBAvDmB,SAAC0E,GACxBxB,EAAWwB,EAAMC,OAAOxE,QAuDpBF,mBAnDqB,SAACyE,GAC1BvB,EAAauB,EAAMC,OAAOxE,UAqDxB,uCACA,kBAAC,EAAD,CACEU,cAAeA,EACfF,OA/ES,SAACK,GACd,IAAMkE,EAASnC,EAAQa,MAAK,SAAAC,GAAC,OAAIA,EAAE7C,KAAOA,KAAIR,KAC1CsE,OAAOC,QAAP,uCAA+CG,EAA/C,OACFzB,EACUzC,GACPqB,MAAK,SAAAK,GACJM,EAAWD,EAAQoB,QAAO,SAAAN,GAAC,OAAIA,EAAE7C,KAAO0B,MACxCsB,EACE,UADS,+BAEekB,EAFf,uBAGT,aC5GZC,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,W","file":"static/js/main.16211ef4.chunk.js","sourcesContent":["import React from 'react'\n\nconst AddPerson = (props) => {\n\n    const newName = props.newName\n    const newNumber = props.newNumber\n    const addPerson = props.addPerson\n    const handleNameChange = props.handleNameChange\n    const handleNumberChange = props.handleNumberChange\n    \n    return (\n        <div>\n            <form onSubmit={addPerson}>\n            <div>\n                Name: <input \n                    value={newName}\n                    onChange={handleNameChange}\n                />\n            </div>\n            <div>\n                Number: <input \n                    value={newNumber}\n                    onChange={handleNumberChange}\n                />\n            </div>\n            <div>\n                <br/>\n                <button type=\"submit\">Add</button>\n            </div>\n        </form>\n      </div>\n    )\n}\n\nexport default AddPerson","import React from 'react'\n\nconst Person = (props) => {\n\n    const person = props.person\n\n    return (\n        <li>\n            {person.name} {person.number}\n            <button onClick={props.remove}>\n                Delete\n            </button>\n        </li>\n    )\n}\n\nexport default Person","import React from 'react'\nimport Person from './Person'\n\nconst Persons = (props) => {\n\n    return (\n        <>\n        <ul>\n            {props.personsToShow.map(person => \n                <Person key={person.id}\n                        person={person}\n                        remove={() => props.remove(person.id)}\n                />\n            )}\n        </ul>\n        </>\n    )\n}\n\nexport default Persons","import React from 'react'\n\nconst Filter = (props) => {\n\n    const newFilter = props.newFilter\n    const handleFilterChange = props.handleFilterChange\n\n    return (\n        <>\n        <form>\n            <div>\n            Filter shown with: <input\n                value={newFilter}\n                onChange={handleFilterChange}\n            />\n            </div>\n      </form>\n      </>\n    )\n}\n\nexport default Filter","import React from 'react'\n\nconst Notification = ({ message, style }) => {\n\n    const errorStyle = {\n        color: 'red',\n        background: 'lightgrey',\n        fontSize: '20px',\n        borderStyle: 'solid',\n        borderRadius: '5px',\n        padding: '10px',\n        marginBottom: '10px'\n    }\n    \n    const successStyle = {...errorStyle, color: 'green'}\n\n    const infoStyle = {...errorStyle, color: 'blue'}\n    \n    const styleToChoose = style === 'success'\n        ? successStyle\n        : style === 'error'\n            ? errorStyle\n            : infoStyle\n\n    if (message === null) {\n        return null\n    }\n    return (\n        <div style={styleToChoose}>\n            {message}\n        </div>\n    )\n}\n\nexport default Notification","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst remove = (idToDelete) => {\n    const request = axios.delete(`${baseUrl}/${idToDelete}`)\n    return request.then(() => idToDelete)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nexport default {getAll, create, remove, update}","import React, { useState, useEffect } from 'react'\nimport AddPerson from './components/AddPerson'\nimport Persons from './components/Persons'\nimport Filter from './components/Filter'\nimport Notification from './components/Notification'\nimport personService from './services/persons'\n\nconst App = () => {\n\n  const [ persons, setPersons] = useState([])\n  const [ newFilter, setNewFilter ] = useState('')\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newMessage, setNewMessage ] = useState(null)\n  const [ newMessageStyle, setNewMessageStyle ] = useState('success')\n\n  //Function for pulling all persons from the 'database':\n  const hook = () => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }\n  useEffect(hook, [])\n\n  //Function for adding a new person:\n  const addPerson = (event) => {\n    event.preventDefault()\n    if (newName.length === 0 || newNumber.length === 0) {\n      makeMessage(\n        'error', \n        'Name or number is missing',\n        5000\n      )\n      return\n    }\n    if (!newPersonIsInPhonebook()) {\n      const personObject = {\n        name: newName,\n        number: newNumber\n      }\n      personService\n        .create(personObject)\n        .then(returnedPerson => {\n            setPersons(persons.concat(returnedPerson))\n            makeMessage(\n              'success', \n              `Added ${returnedPerson.name}`,\n              8000\n            )\n        })\n        .catch(error => {\n          makeMessage(\n            'error', \n            error.response.data.error,\n            5000\n          )\n        })\n        setNewName('')\n        setNewNumber('')\n    }\n    else {\n      if (window.confirm(`${newName} is already added to the phonebook.\\nDo you want to replace the old number with a new one?`)) {\n          const personToUpdate = persons.find(p => p.name === newName)\n          updatePerson(personToUpdate.id)\n      }\n    }\n  }\n\n  //Function for updating a person's number.\n    //Called only if the user has tried to add \n    // a person that is already in the system.\n  const updatePerson = (id) => {\n    const person = persons.find(p => p.id === id)\n    const changedPerson = {...person, number: newNumber}\n\n    personService\n        .update(id, changedPerson)\n        .then(returnedPerson => {\n            setPersons(persons.map(p => p.id !== id ? p : returnedPerson))\n            makeMessage(\n              'info', \n              `Updated number for ${returnedPerson.name}`,\n              5000\n            )\n            setNewName('')\n            setNewNumber('')\n        })\n        .catch(error => {\n          makeMessage(\n            'error', \n            `Error: Information of ${person.name} has already been removed from the server`,\n            5000\n          )\n          setPersons(persons.filter(p => p.id !== id))\n          setNewName('')\n          setNewNumber('')\n        })\n  }\n\n  //Function for removing a person:\n  const remove = (id) => {\n    const nameOf = persons.find(p => p.id === id).name\n    if (window.confirm(`Do you really want to delete ${nameOf}?`)) { \n      personService\n        .remove(id)\n        .then(idToDelete => {\n          setPersons(persons.filter(p => p.id !== idToDelete))\n          makeMessage(\n            'success', \n            `Successfully removed ${nameOf} from the phonebook`,\n            5000\n          )\n        })\n    }\n  }\n\n  //Function for handling changes in name input field:\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  //Function for handling changes in number input field:\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  //Function for handling changes in filter input field:\n  const handleFilterChange = (event) => {\n    setNewFilter(event.target.value)\n  }\n\n  //Function for checking whether a person is already in the phonebook or not:\n  const newPersonIsInPhonebook = () => {\n    return persons\n            .map(p => p.name)\n            .includes(newName)\n  }\n\n  //Function for displaying messages:\n  const makeMessage = (style, message, ms) => {\n    setNewMessageStyle(style)\n    setNewMessage(message)\n    messageTimeOut(ms)\n  }\n\n  //Function for setting time out for messages:\n  const messageTimeOut = (ms) => {\n    return setTimeout(() => {setNewMessage(null)}, ms)\n  }\n\n  //Choose which persons to show based on filter:\n    //(If filter is an empty string, then shows all)\n    //Also checks that person is not null/undefined\n  const personsToShow = persons.filter(p => {\n      return p && p.name.startsWith(newFilter)\n  })\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification message={newMessage} style={newMessageStyle} />\n\n      <Filter\n        newFilter={newFilter}\n        handleFilterChange={handleFilterChange}\n      />\n\n      <h3>Add New:</h3>\n      <AddPerson\n        newName={newName}\n        newNumber={newNumber}\n        addPerson={addPerson}\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n      />\n\n      <h3>Numbers</h3>\n      <Persons \n        personsToShow={personsToShow}\n        remove={remove}\n      />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}